name: clang-tools-static-amd64

on:
  push:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        clang-version: [ 18 ]
        os: [ linux, windows ]
        include:
          - clang-version: 18
            release: llvm-project-18.1.3.src
          - os: linux
            runner: ubuntu-20.04
            os-cmake-args: '-DLLVM_BUILD_STATIC=ON -DCMAKE_CXX_FLAGS="-s -flto" ${POSIX_CMAKE_ARGS}'
            build-args: '-j$(nproc)'
            bindir: '/build/bin'
            dotexe: ''
            shacmd: 'sha512sum'
          - os: windows
            runner: windows-latest
            os-cmake-args: '-Thost=x64 -DCMAKE_CXX_FLAGS="/MP /std:c++14" -DLLVM_USE_CRT_MINSIZEREL="MT"'
            build-args: '--config MinSizeRel'
            bindir: '/build/MinSizeRel/bin'
            dotexe: '.exe'
            shacmd: 'sha512sum.exe'
            extra-tar-args: '--exclude=${RELEASE}/clang/test/Driver/Inputs/* --exclude=${RELEASE}/libcxx/test/std/input.output/filesystems/Inputs/static_test_env/* --exclude=${RELEASE}/libclc/amdgcn-mesa3d'
            extra-tar-args-cfe: '--exclude=cfe-${version}.src/test/Driver/Inputs/*'
    runs-on: ${{ matrix.runner }}
    env:
      COMMON_CMAKE_ARGS: '-DBUILD_SHARED_LIBS=OFF -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra"'
      POSIX_CMAKE_ARGS: '-DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_CXX_COMPILER=g++-10 -DCMAKE_C_COMPILER=gcc-10'
      RELEASE: '${{ matrix.release }}'
      suffix: '${{ matrix.clang-version }}_${{ matrix.os }}-amd64'
    steps:
    - name: download patches
      # we download a tarball of this repo, as the presence of a .git directory leaks
      # the commit hash of this repository into the clang binaries
      shell: bash
      run: curl -L https://github.com/${{ github.repository }}/archive/${{ github.ref }}.tar.gz | tar xvz --strip 1
    - name: get llvm-project
      if: ${{ matrix.clang-version >= 9 || matrix.clang-version == '12.0.1' }}
      shell: bash
      run: |
        version=${RELEASE##llvm-project-}; version=${version%.src}
        curl -LO https://github.com/llvm/llvm-project/releases/download/llvmorg-${version}/${{ matrix.release }}.tar.xz

    - name: unpack llvm-project
      if: ${{ matrix.clang-version >= 9 || matrix.clang-version == '12.0.1' }}
      shell: bash
      run: |
        tar xf ${{ matrix.release }}.tar.xz ${{ matrix.extra-tar-args }}

    - name: cmake
      run: cmake -S ${{ matrix.release }}/llvm -B ${{ matrix.release }}/build ${{ env.COMMON_CMAKE_ARGS }} ${{ matrix.os-cmake-args }} ${{ matrix.extra-cmake-args }}
    - name: build
      run: cmake --build ${{ matrix.release }}/build ${{ matrix.build-args }} --target clang-format clang-query clang-tidy clang-apply-replacements
    - name: rename output binary
      run: |
        cd ${{ matrix.release }}${{ matrix.bindir }}
        mv clang-format${{ matrix.dotexe }} clang-format-${{ env.suffix }}${{ matrix.dotexe }}
        mv clang-query${{ matrix.dotexe }} clang-query-${{ env.suffix }}${{ matrix.dotexe }}
        mv clang-tidy${{ matrix.dotexe }} clang-tidy-${{ env.suffix }}${{ matrix.dotexe }}
        mv clang-apply-replacements${{ matrix.dotexe }} clang-apply-replacements-${{ env.suffix }}${{ matrix.dotexe }}
    - name: create and print sha512sum
      shell: bash
      run: |
        cd ${{ matrix.release }}${{ matrix.bindir }}
        ${{ matrix.shacmd }} clang-format-${{ env.suffix }} > clang-format-${{ env.suffix }}.sha512sum
        ${{ matrix.shacmd }} clang-query-${{ env.suffix }} > clang-query-${{ env.suffix }}.sha512sum
        ${{ matrix.shacmd }} clang-tidy-${{ env.suffix }} > clang-tidy-${{ env.suffix }}.sha512sum
        ${{ matrix.shacmd }} clang-apply-replacements-${{ env.suffix }} > clang-apply-replacements-${{ env.suffix }}.sha512sum
        echo "Checksums are: "
        cat clang-format-${{ env.suffix }}.sha512sum
        cat clang-query-${{ env.suffix }}.sha512sum
        cat clang-tidy-${{ env.suffix }}.sha512sum
        cat clang-apply-replacements-${{ env.suffix }}.sha512sum
    - name: upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: clang-tools
        path: "${{ matrix.release }}${{ matrix.bindir }}/clang-*-${{ env.suffix }}*"
        retention-days: 1
  draft-release:
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - name: download artifacts
        uses: actions/download-artifact@v2
        with:
          name: clang-tools
      - name: list files
        run: ls -laR .
      - name: draft release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "clang-*"
          draft: true
